# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import controller_api_pb2 as controller__api__pb2


class LatencyControllerStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.SetTarget = channel.unary_unary(
        '/controller.LatencyController/SetTarget',
        request_serializer=controller__api__pb2.Targets.SerializeToString,
        response_deserializer=controller__api__pb2.Status.FromString,
        )
    self.Control = channel.stream_stream(
        '/controller.LatencyController/Control',
        request_serializer=controller__api__pb2.OriginalImage.SerializeToString,
        response_deserializer=controller__api__pb2.CustomImage.FromString,
        )


class LatencyControllerServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def SetTarget(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Control(self, request_iterator, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_LatencyControllerServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'SetTarget': grpc.unary_unary_rpc_method_handler(
          servicer.SetTarget,
          request_deserializer=controller__api__pb2.Targets.FromString,
          response_serializer=controller__api__pb2.Status.SerializeToString,
      ),
      'Control': grpc.stream_stream_rpc_method_handler(
          servicer.Control,
          request_deserializer=controller__api__pb2.OriginalImage.FromString,
          response_serializer=controller__api__pb2.CustomImage.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'controller.LatencyController', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
